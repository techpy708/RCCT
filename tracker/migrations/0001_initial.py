# Generated by Django 5.2.4 on 2025-08-01 06:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GST", "GST"),
                            ("Income-tax", "Income-tax"),
                            ("Accounts", "Accounts"),
                            ("Admin", "Admin"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "user_role",
                    models.CharField(
                        choices=[
                            ("Executive", "Executive"),
                            ("Manager", "Manager"),
                            ("Admin", "Admin"),
                        ],
                        default="Executive",
                        max_length=50,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ClientMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_code", models.CharField(max_length=100)),
                ("client_name", models.CharField(max_length=255)),
                ("group_code", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "nature_of_client",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "department",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("GST", "GST"),
                            ("Income-tax", "Income-tax"),
                            ("Accounts", "Accounts"),
                            ("Admin", "Admin"),
                        ],
                        max_length=29,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clients_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ComplianceFormEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "form_type",
                    models.CharField(
                        choices=[("ITR", "ITR"), ("TDS Return", "TDS Return")],
                        max_length=20,
                    ),
                ),
                ("nature", models.CharField(max_length=255)),
                ("year", models.CharField(blank=True, max_length=10, null=True)),
                ("asy", models.CharField(blank=True, max_length=10, null=True)),
                ("quarter", models.CharField(blank=True, max_length=30, null=True)),
                ("date", models.DateField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracker.clientmaster",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "itr_tds_compliance_entries",
            },
        ),
        migrations.CreateModel(
            name="GSTComplianceEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "form_type",
                    models.CharField(
                        choices=[
                            ("GSTR 1", "GSTR 1"),
                            ("GSTR 3B", "GSTR 3B"),
                            ("GSTR 9", "GSTR 9"),
                            ("GSTR 9C", "GSTR 9C"),
                        ],
                        max_length=20,
                    ),
                ),
                ("nature", models.CharField(max_length=255)),
                ("year", models.CharField(blank=True, max_length=9, null=True)),
                ("month", models.CharField(blank=True, max_length=20, null=True)),
                ("date", models.DateField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracker.clientmaster",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoticeCompliance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        choices=[("GST", "GST"), ("Income-tax", "Income-tax")],
                        max_length=50,
                    ),
                ),
                ("date_of_receipt", models.DateField()),
                ("mode_of_receipt", models.CharField(max_length=100)),
                ("client_code", models.CharField(max_length=100)),
                ("group_code", models.CharField(max_length=100)),
                ("name_of_client", models.CharField(max_length=255)),
                ("financial_year", models.CharField(max_length=10)),
                ("description_of_work", models.TextField()),
                ("action_to_be_taken", models.TextField()),
                ("action_date", models.DateField(blank=True, null=True)),
                ("progress", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In Progress", "In Progress"),
                            ("Completed", "Completed"),
                        ],
                        default="Pending",
                        max_length=50,
                    ),
                ),
                ("status_date", models.DateField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("date_of_task_completion", models.DateField(blank=True, null=True)),
                (
                    "billing_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Billing", "Billing"),
                            ("Non Billing", "Non Billing"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "billing_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("bill_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notice_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoticeComplianceTrail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("field_changed", models.CharField(max_length=100)),
                ("previous_value", models.TextField(blank=True, null=True)),
                ("new_value", models.TextField(blank=True, null=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "notice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trails",
                        to="tracker.noticecompliance",
                    ),
                ),
            ],
        ),
    ]
